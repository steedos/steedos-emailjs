{"version":3,"sources":["node_modules/emailjs-imap-client/src/emailjs-imap-client-compression.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA,AAAC,CAAA,UAAS,IAAI,EAAE,OAAO,EAAE;AACrB,gBAAY,CAAC;;AAEb,QAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AAC5C,cAAM,CAAC,CAAC,0BAA0B,CAAC,EAAE,OAAO,CAAC,CAAC;KACjD,MAAM,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AACpC,cAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC;KACnE;CACJ,CAAA,YAAO,UAAS,IAAI,EAAE;AACnB,gBAAY,CAAC;;;;;;;;;AASb,QAAI,UAAU,GAAG,SAAb,UAAU,GAAc;AACxB,YAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC3B,YAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;;;;AAK3B,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAA,UAAS,KAAK,EAAE;AAC1C,gBAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AACrB,uBAAO;aACV;;AAED,gBAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7F,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;AAKd,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAA,UAAS,KAAK,EAAE;AAC1C,gBAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AACrB,uBAAO;aACV;;AAED,gBAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7F,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACjB,CAAC;;AAEF,cAAU,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,MAAM,EAAE;AAC5C,YAAI,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;KACzC,CAAC;;AAEF,cAAU,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,MAAM,EAAE;AAC5C,YAAI,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;KACzC,CAAC;;AAEF,WAAO,UAAU,CAAC;CACrB,CAAC,CAAE","file":"node_modules/emailjs-imap-client/src/emailjs-imap-client-compression.js","sourcesContent":["// Copyright (c) 2014 Andris Reinman\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n(function(root, factory) {\n    'use strict';\n\n    if (typeof define === 'function' && define.amd) {\n        define(['emailjs-imap-client-pako'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('./emailjs-imap-client-pako'));\n    }\n}(this, function(pako) {\n    'use strict';\n\n    /**\n     * @constructor\n     *\n     * Handles de-/compression via #inflate() and #deflate(), calls you back via #deflatedReady() and #inflatedReady().\n     * The chunk we get from deflater is actually a view of a 16kB arraybuffer, so we need to copy the relevant parts\n     * memory to a new arraybuffer.\n     */\n    var Compressor = function() {\n        this.deflatedReady = false;\n        this.inflatedReady = false;\n\n        /**\n         * emit inflated data\n         */\n        this._inflate = pako.inflater(function(chunk) {\n            if (!this.inflatedReady) {\n                return;\n            }\n\n            this.inflatedReady(chunk.buffer.slice(chunk.byteOffset, chunk.byteOffset + chunk.length));\n        }.bind(this));\n\n        /**\n         * emit deflated data\n         */\n        this._deflate = pako.deflater(function(chunk) {\n            if (!this.deflatedReady) {\n                return;\n            }\n\n            this.deflatedReady(chunk.buffer.slice(chunk.byteOffset, chunk.byteOffset + chunk.length));\n        }.bind(this));\n    };\n\n    Compressor.prototype.inflate = function(buffer) {\n        this._inflate(new Uint8Array(buffer));\n    };\n\n    Compressor.prototype.deflate = function(buffer) {\n        this._deflate(new Uint8Array(buffer));\n    };\n\n    return Compressor;\n}));\n"],"sourceRoot":"/source/"}