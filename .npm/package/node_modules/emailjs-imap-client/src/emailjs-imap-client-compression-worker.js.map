{"version":3,"sources":["node_modules/emailjs-imap-client/src/emailjs-imap-client-compression-worker.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACR,gBAAY,CAAC;;;;;AAKb,QAAI,aAAa,GAAG,OAAO,CAAC;AAC5B,QAAI,eAAe,GAAG,SAAS,CAAC;AAChC,QAAI,2BAA2B,GAAG,gBAAgB,CAAC;AACnD,QAAI,eAAe,GAAG,SAAS,CAAC;AAChC,QAAI,2BAA2B,GAAG,gBAAgB,CAAC;;;AAGnD,QAAI,UAAU,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;;AAE9D,QAAI,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AAClC,cAAU,CAAC,aAAa,GAAG,aAAa,CAAC;AACzC,cAAU,CAAC,aAAa,GAAG,aAAa,CAAC;;AAEzC,QAAI,CAAC,SAAS,GAAG,UAAS,CAAC,EAAE;AACzB,YAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO;YACxB,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;;AAE3B,gBAAQ,OAAO;AACX,iBAAK,aAAa;;;;AAId,sBAAM;;AAAA,AAEV,iBAAK,eAAe;AAChB,0BAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,sBAAM;;AAAA,AAEV,iBAAK,eAAe;AAChB,0BAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,sBAAM;;AAAA,SAEb;KACJ,CAAC;;AAEF,aAAS,aAAa,CAAC,MAAM,EAAE;AAC3B,YAAI,CAAC,WAAW,CAAC,aAAa,CAAC,2BAA2B,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;KAClF;;AAED,aAAS,aAAa,CAAC,MAAM,EAAE;AAC3B,YAAI,CAAC,WAAW,CAAC,aAAa,CAAC,2BAA2B,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;KAClF;;;AAGD,aAAS,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE;AACpC,eAAO;AACH,mBAAO,EAAE,OAAO;AAChB,kBAAM,EAAE,MAAM;SACjB,CAAC;KACL;CACJ,CAAA,EAAG,CAAC","file":"node_modules/emailjs-imap-client/src/emailjs-imap-client-compression-worker.js","sourcesContent":["(function() {\n    'use strict';\n\n    //\n    // constants used for communication with the worker\n    //\n    var MESSAGE_START = 'start';\n    var MESSAGE_INFLATE = 'inflate';\n    var MESSAGE_INFLATED_DATA_READY = 'inflated_ready';\n    var MESSAGE_DEFLATE = 'deflate';\n    var MESSAGE_DEFLATED_DATA_READY = 'deflated_ready';\n\n    // require the compressor\n    var Compressor = require('./emailjs-imap-client-compression');\n\n    var compressor = new Compressor();\n    compressor.inflatedReady = inflatedReady;\n    compressor.deflatedReady = deflatedReady;\n\n    self.onmessage = function(e) {\n        var message = e.data.message,\n            buffer = e.data.buffer;\n\n        switch (message) {\n            case MESSAGE_START:\n                // doesn't do much, just initiates the worker. a web\n                // worker needs some time to synchronously load the\n                // scripts, so better start it ahead of time\n                break;\n\n            case MESSAGE_INFLATE:\n                compressor.inflate(buffer);\n                break;\n\n            case MESSAGE_DEFLATE:\n                compressor.deflate(buffer);\n                break;\n\n        }\n    };\n\n    function inflatedReady(buffer) {\n        self.postMessage(createMessage(MESSAGE_INFLATED_DATA_READY, buffer), [buffer]);\n    }\n\n    function deflatedReady(buffer) {\n        self.postMessage(createMessage(MESSAGE_DEFLATED_DATA_READY, buffer), [buffer]);\n    }\n\n    // Helper function\n    function createMessage(message, buffer) {\n        return {\n            message: message,\n            buffer: buffer\n        };\n    }\n})();\n"],"sourceRoot":"/source/"}